<project basedir="." default="HelloWorld" name="HelloJava">

  <!-- Build the planets in their order from the sun even though they are listed alphabetically below. -->

  <property environment="env" />

  <property name="build.dir" value="build/${ant.project.name}" />
  <echo message="$${build.dir}=${build.dir}" level="info" />

  <property name="dist.dir" value="./was/${ant.project.name}" />
  <echo message="$${dist.dir}=${dist.dir}" level="info" />

  <!-- 
    A property file that is created anew with each build that will contain build information i.e. the build number. 
    May be included in the run-time biniaries. 

    Note1: Add this name to the ignore file
    Note2: Please do not use the names: 
           - version.properties ~ Reserved for application's major.minor.patch numbering (e.g. 1.2.3)
           - build.properties ~ Industry standard file name for overriding build properites.
           - build.number ~ Default name used by the ant task buildnumber.
           - build.config ~ Name is used by the .NET projects and NUnit test.
  -->

  <property name="build.meta" value="build.metadata.properties" />
  <echo message="$${bulid.meta}=${build.meta}" level="info" />

  <!-- 
    A template HTML page that contains replacable tokens (i.e the build number) and 
    the name of the output HTML page
       
    Note1: Add the output file's name to the ignore file
  -->

  <property name="version.html" value="version.html" />
  <property name="version.template.html" value="version.template.html" />

	<available file=".git" type="dir" property="git.present" />



  <target name="clean">
    <!-- clean task at project level -->
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
    <delete file="${build.meta}" />
    <delete file="${version.html}" />
    <echo message="target clean done." />
  </target>



  <target name="init" depends="clean,build_enumeration">
    <echo message="target init done." />
  </target>



  <target name="git" if="git.present">

		<!-- git revision -->
		<exec executable="git" outputproperty="git.revision">
			<arg value="rev-parse" />
			<arg value="HEAD" />
    </exec>
		<property name="git.revision" value="n/a" />
		<echo message="$${git.revision} == ${git.revision}" level="info" />

		<!-- git branch -->
		<exec executable="git" outputproperty="git.branch">
			<arg value="rev-parse" />
			<arg value="--abbrev-ref" />
			<arg value="HEAD" />
    </exec>
		<property name="git.branch" value="n/a" />
		<echo message="$${git.branch} == ${git.branch}" level="info" />

		<echo message="target git done." />
  </target>



  <target name="build_enumeration" depends="git">
    <!-- 
      Set a few shell variables by default when running locally that 
      would exist when running on the build server with openmake and harvest 
    -->

    <!-- build number as generated by openmake -->
    <property name="env.JOB_NUMBER" value="0000" />

    <tstamp>
      <format property="env.ts" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>

		<!-- display build metadata -->
		<echo message="TODAY=${env.ts}" level="info" />
		<echo message="ant.project.name=${ant.project.name}" level="info" />
		<echo message="git.branch=${git.branch}" level="info" />
		<echo message="git.revision=${git.revision}" level="info" />
		<echo message="JOB_NUMBER=${env.CI_JOB_ID}" level="info" />
		<echo message="LOG_URL=${env.CI_PIPELINE_URL}" level="info" />

		<!-- create anew a build metadata file -->
		<echo file="${build.meta}" message="TODAY=${env.ts}${line.separator}" append="false" />
		<echo file="${build.meta}" message="ant.project.name=${ant.project.name}${line.separator}" append="true" />
		<echo file="${build.meta}" message="git.branch=${git.branch}${line.separator}" append="true" />
		<echo file="${build.meta}" message="git.revision=${git.revision}${line.separator}" append="true" />
		<echo file="${build.meta}" message="JOB_NUMBER=${env.JOB_NUMBER}${line.separator}" append="true" />

		<echo file="${build.meta}" message="LOG_URL=${env.LOG_URL}${line.separator}" append="true" />
		<echo message="Metadata properties file ${build.meta} create anew." />
    <!-- using a template create anew a HTML file that contains the build's metadata -->
    <copy file="${version.template.html}" tofile="${version.html}" overwrite="yes">
      <filterchain>
        <replacetokens>
          <token key="TODAY" value="${env.ts}" />
          <token key="ant.project.name" value="${ant.project.name}" />
          <token key="git.branch" value="${git.branch}" />
          <token key="git.revision" value="${git.revision}" />
          <token key="build.number" value="${env.CI_JOB_ID}" />
					<token key="LOG_URL" value="${env.CI_PIPELINE_URL}" />
        </replacetokens>
      </filterchain>
    </copy>
    <echo message="Metadata HTML file ${version.html} created anew." />

    <echo message="target build_enumeration done." />
  </target>



  <!-- individual build tasks with dependencies -->
  <target name="HelloEarth" depends="init,HelloVenus">
    <ant dir="HelloEarth" />
    <echo message="target HelloEarth done."/>
  </target>



  <target name="HelloMars" depends="init,HelloEarth">
    <ant dir="HelloMars" /> 
    <echo message="target HelloMars done."/>
  </target>



  <target name="HelloMercury" depends="init">
    <ant dir="HelloMercury" />
    <echo message="target HelloMercury done."/>
  </target>



  <target name="HelloVenus" depends="init,HelloMercury">
    <ant dir="HelloVenus" />
    <echo message="target HelloVenus done."/>
  </target>



  <target name="HelloWorld" depends="init">
    <ant dir="HelloWorld" />
    <echo message="target HelloWorld done."/>
  </target>



  <!-- clean build of the whole project -->
  <target name="compileall" depends="init,clean,HelloEarth,HelloMars,HelloMercury,HelloVenus,HelloWorld">
  </target>



  <target name="hello" depends="init">
    <!-- debug task to display all the properties -->
    <echoproperties />
    <echo message="target hello done." />
  </target>

</project>
